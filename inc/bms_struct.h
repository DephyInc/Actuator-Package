#ifndef BMS_STRUCT_H
#define BMS_STRUCT_H
/*
 * bms_struct.h
 *
 * AUTOGENERATED FILE! ONLY EDIT IF YOU ARE A MACHINE!
 *
 *
 *  Created on: 2020-04-06 21:09:18.788505
 *      Author: Dephy Inc
 */

#include "BMS_device_spec.h "
#include <sstream> 
#include <stdio.h> 
#include <string> 

#include <ctime> 

#define BMS_SYSTEM_TIME_POS 25
#define BMS_STRUCT_DEVICE_FIELD_COUNT 26

struct BMSState 
 { 

	int bms_bms_state_0;
	int bms_id;
	int bms_state_time;
	int bms_cells_0_mv;
	int bms_cells_1_mv;
	int bms_cells_2_mv;
	int bms_cells_3_mv;
	int bms_cells_4_mv;
	int bms_cells_5_mv;
	int bms_cells_6_mv;
	int bms_cells_7_mv;
	int bms_cells_8_mv;
	int bms_bms_state;
	int bms_current;
	int bms_timer;
	int bms_balancing;
	int bms_stack_voltage;
	int bms_pack_imbalance;
	int bms_temp_0_;
	int bms_temp_1_;
	int bms_temp_2_;
	int bms_genvar_0_;
	int bms_genvar_1_;
	int bms_genvar_2_;
	int bms_genvar_3_;
	//the system time
	clock_t systemTime;
	uint32_t deviceData[BMS_STRUCT_DEVICE_FIELD_COUNT];

	// sets the data.  Requires system start time.  If unavailable, set to 0
	void setData(uint32_t _deviceStateBuffer[], clock_t systemStartTime) 
 	{
		bms_bms_state_0=_deviceStateBuffer[BMS_BMS_STATE_0_POS ];
		deviceData[BMS_BMS_STATE_0_POS ]=_deviceStateBuffer[BMS_BMS_STATE_0_POS ];
		bms_id=_deviceStateBuffer[BMS_ID_POS ];
		deviceData[BMS_ID_POS ]=_deviceStateBuffer[BMS_ID_POS ];
		bms_state_time=_deviceStateBuffer[BMS_STATE_TIME_POS ];
		deviceData[BMS_STATE_TIME_POS ]=_deviceStateBuffer[BMS_STATE_TIME_POS ];
		bms_cells_0_mv=_deviceStateBuffer[BMS_CELLS_0_MV_POS ];
		deviceData[BMS_CELLS_0_MV_POS ]=_deviceStateBuffer[BMS_CELLS_0_MV_POS ];
		bms_cells_1_mv=_deviceStateBuffer[BMS_CELLS_1_MV_POS ];
		deviceData[BMS_CELLS_1_MV_POS ]=_deviceStateBuffer[BMS_CELLS_1_MV_POS ];
		bms_cells_2_mv=_deviceStateBuffer[BMS_CELLS_2_MV_POS ];
		deviceData[BMS_CELLS_2_MV_POS ]=_deviceStateBuffer[BMS_CELLS_2_MV_POS ];
		bms_cells_3_mv=_deviceStateBuffer[BMS_CELLS_3_MV_POS ];
		deviceData[BMS_CELLS_3_MV_POS ]=_deviceStateBuffer[BMS_CELLS_3_MV_POS ];
		bms_cells_4_mv=_deviceStateBuffer[BMS_CELLS_4_MV_POS ];
		deviceData[BMS_CELLS_4_MV_POS ]=_deviceStateBuffer[BMS_CELLS_4_MV_POS ];
		bms_cells_5_mv=_deviceStateBuffer[BMS_CELLS_5_MV_POS ];
		deviceData[BMS_CELLS_5_MV_POS ]=_deviceStateBuffer[BMS_CELLS_5_MV_POS ];
		bms_cells_6_mv=_deviceStateBuffer[BMS_CELLS_6_MV_POS ];
		deviceData[BMS_CELLS_6_MV_POS ]=_deviceStateBuffer[BMS_CELLS_6_MV_POS ];
		bms_cells_7_mv=_deviceStateBuffer[BMS_CELLS_7_MV_POS ];
		deviceData[BMS_CELLS_7_MV_POS ]=_deviceStateBuffer[BMS_CELLS_7_MV_POS ];
		bms_cells_8_mv=_deviceStateBuffer[BMS_CELLS_8_MV_POS ];
		deviceData[BMS_CELLS_8_MV_POS ]=_deviceStateBuffer[BMS_CELLS_8_MV_POS ];
		bms_bms_state=_deviceStateBuffer[BMS_BMS_STATE_POS ];
		deviceData[BMS_BMS_STATE_POS ]=_deviceStateBuffer[BMS_BMS_STATE_POS ];
		bms_current=_deviceStateBuffer[BMS_CURRENT_POS ];
		deviceData[BMS_CURRENT_POS ]=_deviceStateBuffer[BMS_CURRENT_POS ];
		bms_timer=_deviceStateBuffer[BMS_TIMER_POS ];
		deviceData[BMS_TIMER_POS ]=_deviceStateBuffer[BMS_TIMER_POS ];
		bms_balancing=_deviceStateBuffer[BMS_BALANCING_POS ];
		deviceData[BMS_BALANCING_POS ]=_deviceStateBuffer[BMS_BALANCING_POS ];
		bms_stack_voltage=_deviceStateBuffer[BMS_STACK_VOLTAGE_POS ];
		deviceData[BMS_STACK_VOLTAGE_POS ]=_deviceStateBuffer[BMS_STACK_VOLTAGE_POS ];
		bms_pack_imbalance=_deviceStateBuffer[BMS_PACK_IMBALANCE_POS ];
		deviceData[BMS_PACK_IMBALANCE_POS ]=_deviceStateBuffer[BMS_PACK_IMBALANCE_POS ];
		bms_temp_0_=_deviceStateBuffer[BMS_TEMP_0_POS ];
		deviceData[BMS_TEMP_0_POS ]=_deviceStateBuffer[BMS_TEMP_0_POS ];
		bms_temp_1_=_deviceStateBuffer[BMS_TEMP_1_POS ];
		deviceData[BMS_TEMP_1_POS ]=_deviceStateBuffer[BMS_TEMP_1_POS ];
		bms_temp_2_=_deviceStateBuffer[BMS_TEMP_2_POS ];
		deviceData[BMS_TEMP_2_POS ]=_deviceStateBuffer[BMS_TEMP_2_POS ];
		bms_genvar_0_=_deviceStateBuffer[BMS_GENVAR_0_POS ];
		deviceData[BMS_GENVAR_0_POS ]=_deviceStateBuffer[BMS_GENVAR_0_POS ];
		bms_genvar_1_=_deviceStateBuffer[BMS_GENVAR_1_POS ];
		deviceData[BMS_GENVAR_1_POS ]=_deviceStateBuffer[BMS_GENVAR_1_POS ];
		bms_genvar_2_=_deviceStateBuffer[BMS_GENVAR_2_POS ];
		deviceData[BMS_GENVAR_2_POS ]=_deviceStateBuffer[BMS_GENVAR_2_POS ];
		bms_genvar_3_=_deviceStateBuffer[BMS_GENVAR_3_POS ];
		deviceData[BMS_GENVAR_3_POS ]=_deviceStateBuffer[BMS_GENVAR_3_POS ];

		systemTime= systemStartTime-clock();
		deviceData[BMS_SYSTEM_TIME_POS]=systemTime;
	};

	void sendToStream(std::stringstream &ss) 
 	{
		ss << bms_bms_state_0 <<",";
		ss << bms_id <<",";
		ss << bms_state_time <<",";
		ss << bms_cells_0_mv <<",";
		ss << bms_cells_1_mv <<",";
		ss << bms_cells_2_mv <<",";
		ss << bms_cells_3_mv <<",";
		ss << bms_cells_4_mv <<",";
		ss << bms_cells_5_mv <<",";
		ss << bms_cells_6_mv <<",";
		ss << bms_cells_7_mv <<",";
		ss << bms_cells_8_mv <<",";
		ss << bms_bms_state <<",";
		ss << bms_current <<",";
		ss << bms_timer <<",";
		ss << bms_balancing <<",";
		ss << bms_stack_voltage <<",";
		ss << bms_pack_imbalance <<",";
		ss << bms_temp_0_ <<",";
		ss << bms_temp_1_ <<",";
		ss << bms_temp_2_ <<",";
		ss << bms_genvar_0_ <<",";
		ss << bms_genvar_1_ <<",";
		ss << bms_genvar_2_ <<",";
		ss << bms_genvar_3_ <<",";
		ss<<systemTime<<",";
	};

	 static void GetLabels(std::string *labels) 
 	{
		labels[BMS_BMS_STATE_0_POS]= "bms_state_0";
		labels[BMS_ID_POS]= "id";
		labels[BMS_STATE_TIME_POS]= "state_time";
		labels[BMS_CELLS_0_MV_POS]= "cells[0].mV";
		labels[BMS_CELLS_1_MV_POS]= "cells[1].mV";
		labels[BMS_CELLS_2_MV_POS]= "cells[2].mV";
		labels[BMS_CELLS_3_MV_POS]= "cells[3].mV";
		labels[BMS_CELLS_4_MV_POS]= "cells[4].mV";
		labels[BMS_CELLS_5_MV_POS]= "cells[5].mV";
		labels[BMS_CELLS_6_MV_POS]= "cells[6].mV";
		labels[BMS_CELLS_7_MV_POS]= "cells[7].mV";
		labels[BMS_CELLS_8_MV_POS]= "cells[8].mV";
		labels[BMS_BMS_STATE_POS]= "bms_state";
		labels[BMS_CURRENT_POS]= "current";
		labels[BMS_TIMER_POS]= "timer";
		labels[BMS_BALANCING_POS]= "balancing";
		labels[BMS_STACK_VOLTAGE_POS]= "stack_voltage";
		labels[BMS_PACK_IMBALANCE_POS]= "pack_imbalance";
		labels[BMS_TEMP_0_POS]= "temp[0]";
		labels[BMS_TEMP_1_POS]= "temp[1]";
		labels[BMS_TEMP_2_POS]= "temp[2]";
		labels[BMS_GENVAR_0_POS]= "genVar[0]";
		labels[BMS_GENVAR_1_POS]= "genVar[1]";
		labels[BMS_GENVAR_2_POS]= "genVar[2]";
		labels[BMS_GENVAR_3_POS]= "genVar[3]";
		labels[BMS_SYSTEM_TIME_POS]="sys_time";
	};
}; 
#endif ////BMS_STRUCT_H
