#ifndef HABSOLUTE_STRUCT_H
#define HABSOLUTE_STRUCT_H
/*
 * habsolute_struct.h
 *
 * AUTOGENERATED FILE! ONLY EDIT IF YOU ARE A MACHINE!
 *
 *
 *  Created on: 2020-04-07 08:52:21.233297
 *      Author: Dephy Inc
 */

#include "Habsolute_device_spec.h "
#include <sstream> 
#include <stdio.h> 
#include <string> 

#include <ctime> 

#define HABSOLUTE_SYSTEM_TIME_POS 18
#define HABSOLUTE_STRUCT_DEVICE_FIELD_COUNT 19

struct HabsoluteState 
 { 

	int habsolute;
	int id;
	int state_time;
	int ank_ang;
	int ank_vel;
	int adc_0;
	int adc_1;
	int adc_2;
	int adc_3;
	int adc_4;
	int adc_5;
	int adc_6;
	int adc_7;
	int genvar_0;
	int genvar_1;
	int genvar_2;
	int genvar_3;
	int status;
	//the system time
	clock_t systemTime;
	uint32_t deviceData[HABSOLUTE_STRUCT_DEVICE_FIELD_COUNT];

	// sets the data.  Requires system start time.  If unavailable, set to 0
	void setData(uint32_t _deviceStateBuffer[], clock_t systemStartTime) 
 	{
		habsolute=_deviceStateBuffer[HABSOLUTE_HABSOLUTE_POS ];
		deviceData[HABSOLUTE_HABSOLUTE_POS ]=_deviceStateBuffer[HABSOLUTE_HABSOLUTE_POS ];
		id=_deviceStateBuffer[HABSOLUTE_ID_POS ];
		deviceData[HABSOLUTE_ID_POS ]=_deviceStateBuffer[HABSOLUTE_ID_POS ];
		state_time=_deviceStateBuffer[HABSOLUTE_STATE_TIME_POS ];
		deviceData[HABSOLUTE_STATE_TIME_POS ]=_deviceStateBuffer[HABSOLUTE_STATE_TIME_POS ];
		ank_ang=_deviceStateBuffer[HABSOLUTE_ANK_ANG_POS ];
		deviceData[HABSOLUTE_ANK_ANG_POS ]=_deviceStateBuffer[HABSOLUTE_ANK_ANG_POS ];
		ank_vel=_deviceStateBuffer[HABSOLUTE_ANK_VEL_POS ];
		deviceData[HABSOLUTE_ANK_VEL_POS ]=_deviceStateBuffer[HABSOLUTE_ANK_VEL_POS ];
		adc_0=_deviceStateBuffer[HABSOLUTE_ADC_0_POS ];
		deviceData[HABSOLUTE_ADC_0_POS ]=_deviceStateBuffer[HABSOLUTE_ADC_0_POS ];
		adc_1=_deviceStateBuffer[HABSOLUTE_ADC_1_POS ];
		deviceData[HABSOLUTE_ADC_1_POS ]=_deviceStateBuffer[HABSOLUTE_ADC_1_POS ];
		adc_2=_deviceStateBuffer[HABSOLUTE_ADC_2_POS ];
		deviceData[HABSOLUTE_ADC_2_POS ]=_deviceStateBuffer[HABSOLUTE_ADC_2_POS ];
		adc_3=_deviceStateBuffer[HABSOLUTE_ADC_3_POS ];
		deviceData[HABSOLUTE_ADC_3_POS ]=_deviceStateBuffer[HABSOLUTE_ADC_3_POS ];
		adc_4=_deviceStateBuffer[HABSOLUTE_ADC_4_POS ];
		deviceData[HABSOLUTE_ADC_4_POS ]=_deviceStateBuffer[HABSOLUTE_ADC_4_POS ];


		adc_5=_deviceStateBuffer[HABSOLUTE_ADC_5_POS ];
		deviceData[HABSOLUTE_ADC_5_POS ]=_deviceStateBuffer[HABSOLUTE_ADC_5_POS ];
		adc_6=_deviceStateBuffer[HABSOLUTE_ADC_6_POS ];
		deviceData[HABSOLUTE_ADC_6_POS ]=_deviceStateBuffer[HABSOLUTE_ADC_6_POS ];
		adc_7=_deviceStateBuffer[HABSOLUTE_ADC_7_POS ];
		deviceData[HABSOLUTE_ADC_7_POS ]=_deviceStateBuffer[HABSOLUTE_ADC_7_POS ];
		genvar_0=_deviceStateBuffer[HABSOLUTE_GENVAR_0_POS ];
		deviceData[HABSOLUTE_GENVAR_0_POS ]=_deviceStateBuffer[HABSOLUTE_GENVAR_0_POS ];
		genvar_1=_deviceStateBuffer[HABSOLUTE_GENVAR_1_POS ];
		deviceData[HABSOLUTE_GENVAR_1_POS ]=_deviceStateBuffer[HABSOLUTE_GENVAR_1_POS ];
		genvar_2=_deviceStateBuffer[HABSOLUTE_GENVAR_2_POS ];
		deviceData[HABSOLUTE_GENVAR_2_POS ]=_deviceStateBuffer[HABSOLUTE_GENVAR_2_POS ];
		genvar_3=_deviceStateBuffer[HABSOLUTE_GENVAR_3_POS ];
		deviceData[HABSOLUTE_GENVAR_3_POS ]=_deviceStateBuffer[HABSOLUTE_GENVAR_3_POS ];
		status=_deviceStateBuffer[HABSOLUTE_STATUS_POS ];
		deviceData[HABSOLUTE_STATUS_POS ]=_deviceStateBuffer[HABSOLUTE_STATUS_POS ];

		systemTime= systemStartTime-clock();
		deviceData[HABSOLUTE_SYSTEM_TIME_POS]=systemTime;
	};

	void sendToStream(std::stringstream &ss) 
 	{
		ss << habsolute <<",";
		ss << id <<",";
		ss << state_time <<",";
		ss << ank_ang <<",";
		ss << ank_vel <<",";
		ss << adc_0 <<",";
		ss << adc_1 <<",";
		ss << adc_2 <<",";
		ss << adc_3 <<",";
		ss << adc_4 <<",";
		ss << adc_5 <<",";
		ss << adc_6 <<",";
		ss << adc_7 <<",";
		ss << genvar_0 <<",";
		ss << genvar_1 <<",";
		ss << genvar_2 <<",";
		ss << genvar_3 <<",";
		ss << status <<",";
		ss<<systemTime<<",";
	};

	 static void GetLabels(std::string *labels) 
 	{
		labels[HABSOLUTE_HABSOLUTE_POS]= "habsolute";
		labels[HABSOLUTE_ID_POS]= "id";
		labels[HABSOLUTE_STATE_TIME_POS]= "state_time";
		labels[HABSOLUTE_ANK_ANG_POS]= "ank_ang";
		labels[HABSOLUTE_ANK_VEL_POS]= "ank_vel";
		labels[HABSOLUTE_ADC_0_POS]= "adc_0";
		labels[HABSOLUTE_ADC_1_POS]= "adc_1";
		labels[HABSOLUTE_ADC_2_POS]= "adc_2";
		labels[HABSOLUTE_ADC_3_POS]= "adc_3";
		labels[HABSOLUTE_ADC_4_POS]= "adc_4";
		labels[HABSOLUTE_ADC_5_POS]= "adc_5";
		labels[HABSOLUTE_ADC_6_POS]= "adc_6";
		labels[HABSOLUTE_ADC_7_POS]= "adc_7";
		labels[HABSOLUTE_GENVAR_0_POS]= "genVar_0";
		labels[HABSOLUTE_GENVAR_1_POS]= "genVar_1";
		labels[HABSOLUTE_GENVAR_2_POS]= "genVar_2";
		labels[HABSOLUTE_GENVAR_3_POS]= "genVar_3";
		labels[HABSOLUTE_STATUS_POS]= "status";
		labels[HABSOLUTE_SYSTEM_TIME_POS]="sys_time";
	};
}; 
#endif ////HABSOLUTE_STRUCT_H
