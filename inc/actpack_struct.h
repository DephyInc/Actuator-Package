#ifndef ACTPACK_STRUCT_H
#define ACTPACK_STRUCT_H
/*
 * actpack_struct.h
 *
 * AUTOGENERATED FILE! ONLY EDIT IF YOU ARE A MACHINE!
 *
 *
 *  Created on: 2020-04-06 20:54:55.630250
 *      Author: Dephy Inc
 */

#include "ActPack_device_spec.h "
#include <sstream> 
#include <stdio.h> 
#include <string> 

#include <ctime> 

#define ACTPACK_SYSTEM_TIME_POS 32
#define ACTPACK_STRUCT_DEVICE_FIELD_COUNT 33

struct ActPackState 
 { 

	int actpack_rigid;
	int actpack_id;
	int actpack_state_time;
	int actpack_accelx;
	int actpack_accely;
	int actpack_accelz;
	int actpack_gyrox;
	int actpack_gyroy;
	int actpack_gyroz;
	int actpack_mot_ang;
	int actpack_mot_vel;
	int actpack_mot_acc;
	int actpack_mot_cur;
	int actpack_mot_volt;
	int actpack_batt_volt;
	int actpack_batt_curr;
	int actpack_temperature;
	int actpack_status_mn;
	int actpack_status_ex;
	int actpack_status_re;
	int actpack_genvar_0;
	int actpack_genvar_1;
	int actpack_genvar_2;
	int actpack_genvar_3;
	int actpack_genvar_4;
	int actpack_genvar_5;
	int actpack_genvar_6;
	int actpack_genvar_7;
	int actpack_genvar_8;
	int actpack_genvar_9;
	int actpack_ank_ang;
	int actpack_ank_vel;
	//the system time
	clock_t systemTime;
	uint32_t deviceData[ACTPACK_STRUCT_DEVICE_FIELD_COUNT];

	// sets the data.  Requires system start time.  If unavailable, set to 0
	void setData(uint32_t _deviceStateBuffer[], clock_t systemStartTime) 
 	{
		actpack_rigid=_deviceStateBuffer[ACTPACK_RIGID_POS ];
		deviceData[ACTPACK_RIGID_POS ]=_deviceStateBuffer[ACTPACK_RIGID_POS ];
		actpack_id=_deviceStateBuffer[ACTPACK_ID_POS ];
		deviceData[ACTPACK_ID_POS ]=_deviceStateBuffer[ACTPACK_ID_POS ];
		actpack_state_time=_deviceStateBuffer[ACTPACK_STATE_TIME_POS ];
		deviceData[ACTPACK_STATE_TIME_POS ]=_deviceStateBuffer[ACTPACK_STATE_TIME_POS ];
		actpack_accelx=_deviceStateBuffer[ACTPACK_ACCELX_POS ];
		deviceData[ACTPACK_ACCELX_POS ]=_deviceStateBuffer[ACTPACK_ACCELX_POS ];
		actpack_accely=_deviceStateBuffer[ACTPACK_ACCELY_POS ];
		deviceData[ACTPACK_ACCELY_POS ]=_deviceStateBuffer[ACTPACK_ACCELY_POS ];
		actpack_accelz=_deviceStateBuffer[ACTPACK_ACCELZ_POS ];
		deviceData[ACTPACK_ACCELZ_POS ]=_deviceStateBuffer[ACTPACK_ACCELZ_POS ];
		actpack_gyrox=_deviceStateBuffer[ACTPACK_GYROX_POS ];
		deviceData[ACTPACK_GYROX_POS ]=_deviceStateBuffer[ACTPACK_GYROX_POS ];
		actpack_gyroy=_deviceStateBuffer[ACTPACK_GYROY_POS ];
		deviceData[ACTPACK_GYROY_POS ]=_deviceStateBuffer[ACTPACK_GYROY_POS ];
		actpack_gyroz=_deviceStateBuffer[ACTPACK_GYROZ_POS ];
		deviceData[ACTPACK_GYROZ_POS ]=_deviceStateBuffer[ACTPACK_GYROZ_POS ];
		actpack_mot_ang=_deviceStateBuffer[ACTPACK_MOT_ANG_POS ];
		deviceData[ACTPACK_MOT_ANG_POS ]=_deviceStateBuffer[ACTPACK_MOT_ANG_POS ];
		actpack_mot_vel=_deviceStateBuffer[ACTPACK_MOT_VEL_POS ];
		deviceData[ACTPACK_MOT_VEL_POS ]=_deviceStateBuffer[ACTPACK_MOT_VEL_POS ];
		actpack_mot_acc=_deviceStateBuffer[ACTPACK_MOT_ACC_POS ];
		deviceData[ACTPACK_MOT_ACC_POS ]=_deviceStateBuffer[ACTPACK_MOT_ACC_POS ];
		actpack_mot_cur=_deviceStateBuffer[ACTPACK_MOT_CUR_POS ];
		deviceData[ACTPACK_MOT_CUR_POS ]=_deviceStateBuffer[ACTPACK_MOT_CUR_POS ];
		actpack_mot_volt=_deviceStateBuffer[ACTPACK_MOT_VOLT_POS ];
		deviceData[ACTPACK_MOT_VOLT_POS ]=_deviceStateBuffer[ACTPACK_MOT_VOLT_POS ];
		actpack_batt_volt=_deviceStateBuffer[ACTPACK_BATT_VOLT_POS ];
		deviceData[ACTPACK_BATT_VOLT_POS ]=_deviceStateBuffer[ACTPACK_BATT_VOLT_POS ];
		actpack_batt_curr=_deviceStateBuffer[ACTPACK_BATT_CURR_POS ];
		deviceData[ACTPACK_BATT_CURR_POS ]=_deviceStateBuffer[ACTPACK_BATT_CURR_POS ];
		actpack_temperature=_deviceStateBuffer[ACTPACK_TEMPERATURE_POS ];
		deviceData[ACTPACK_TEMPERATURE_POS ]=_deviceStateBuffer[ACTPACK_TEMPERATURE_POS ];
		actpack_status_mn=_deviceStateBuffer[ACTPACK_STATUS_MN_POS ];
		deviceData[ACTPACK_STATUS_MN_POS ]=_deviceStateBuffer[ACTPACK_STATUS_MN_POS ];
		actpack_status_ex=_deviceStateBuffer[ACTPACK_STATUS_EX_POS ];
		deviceData[ACTPACK_STATUS_EX_POS ]=_deviceStateBuffer[ACTPACK_STATUS_EX_POS ];
		actpack_status_re=_deviceStateBuffer[ACTPACK_STATUS_RE_POS ];
		deviceData[ACTPACK_STATUS_RE_POS ]=_deviceStateBuffer[ACTPACK_STATUS_RE_POS ];
		actpack_genvar_0=_deviceStateBuffer[ACTPACK_GENVAR_0_POS ];
		deviceData[ACTPACK_GENVAR_0_POS ]=_deviceStateBuffer[ACTPACK_GENVAR_0_POS ];
		actpack_genvar_1=_deviceStateBuffer[ACTPACK_GENVAR_1_POS ];
		deviceData[ACTPACK_GENVAR_1_POS ]=_deviceStateBuffer[ACTPACK_GENVAR_1_POS ];
		actpack_genvar_2=_deviceStateBuffer[ACTPACK_GENVAR_2_POS ];
		deviceData[ACTPACK_GENVAR_2_POS ]=_deviceStateBuffer[ACTPACK_GENVAR_2_POS ];
		actpack_genvar_3=_deviceStateBuffer[ACTPACK_GENVAR_3_POS ];
		deviceData[ACTPACK_GENVAR_3_POS ]=_deviceStateBuffer[ACTPACK_GENVAR_3_POS ];
		actpack_genvar_4=_deviceStateBuffer[ACTPACK_GENVAR_4_POS ];
		deviceData[ACTPACK_GENVAR_4_POS ]=_deviceStateBuffer[ACTPACK_GENVAR_4_POS ];
		actpack_genvar_5=_deviceStateBuffer[ACTPACK_GENVAR_5_POS ];
		deviceData[ACTPACK_GENVAR_5_POS ]=_deviceStateBuffer[ACTPACK_GENVAR_5_POS ];
		actpack_genvar_6=_deviceStateBuffer[ACTPACK_GENVAR_6_POS ];
		deviceData[ACTPACK_GENVAR_6_POS ]=_deviceStateBuffer[ACTPACK_GENVAR_6_POS ];
		actpack_genvar_7=_deviceStateBuffer[ACTPACK_GENVAR_7_POS ];
		deviceData[ACTPACK_GENVAR_7_POS ]=_deviceStateBuffer[ACTPACK_GENVAR_7_POS ];
		actpack_genvar_8=_deviceStateBuffer[ACTPACK_GENVAR_8_POS ];
		deviceData[ACTPACK_GENVAR_8_POS ]=_deviceStateBuffer[ACTPACK_GENVAR_8_POS ];
		actpack_genvar_9=_deviceStateBuffer[ACTPACK_GENVAR_9_POS ];
		deviceData[ACTPACK_GENVAR_9_POS ]=_deviceStateBuffer[ACTPACK_GENVAR_9_POS ];
		actpack_ank_ang=_deviceStateBuffer[ACTPACK_ANK_ANG_POS ];
		deviceData[ACTPACK_ANK_ANG_POS ]=_deviceStateBuffer[ACTPACK_ANK_ANG_POS ];
		actpack_ank_vel=_deviceStateBuffer[ACTPACK_ANK_VEL_POS ];
		deviceData[ACTPACK_ANK_VEL_POS ]=_deviceStateBuffer[ACTPACK_ANK_VEL_POS ];

		systemTime= systemStartTime-clock();
		deviceData[ACTPACK_SYSTEM_TIME_POS]=systemTime;
	};

	void sendToStream(std::stringstream &ss) 
 	{
		ss << actpack_rigid <<",";
		ss << actpack_id <<",";
		ss << actpack_state_time <<",";
		ss << actpack_accelx <<",";
		ss << actpack_accely <<",";
		ss << actpack_accelz <<",";
		ss << actpack_gyrox <<",";
		ss << actpack_gyroy <<",";
		ss << actpack_gyroz <<",";
		ss << actpack_mot_ang <<",";
		ss << actpack_mot_vel <<",";
		ss << actpack_mot_acc <<",";
		ss << actpack_mot_cur <<",";
		ss << actpack_mot_volt <<",";
		ss << actpack_batt_volt <<",";
		ss << actpack_batt_curr <<",";
		ss << actpack_temperature <<",";
		ss << actpack_status_mn <<",";
		ss << actpack_status_ex <<",";
		ss << actpack_status_re <<",";
		ss << actpack_genvar_0 <<",";
		ss << actpack_genvar_1 <<",";
		ss << actpack_genvar_2 <<",";
		ss << actpack_genvar_3 <<",";
		ss << actpack_genvar_4 <<",";
		ss << actpack_genvar_5 <<",";
		ss << actpack_genvar_6 <<",";
		ss << actpack_genvar_7 <<",";
		ss << actpack_genvar_8 <<",";
		ss << actpack_genvar_9 <<",";
		ss << actpack_ank_ang <<",";
		ss << actpack_ank_vel <<",";
		ss<<systemTime<<",";
	};

	 static void GetLabels(std::string *labels) 
 	{
		labels[ACTPACK_RIGID_POS]= "rigid";
		labels[ACTPACK_ID_POS]= "id";
		labels[ACTPACK_STATE_TIME_POS]= "state_time";
		labels[ACTPACK_ACCELX_POS]= "accelx";
		labels[ACTPACK_ACCELY_POS]= "accely";
		labels[ACTPACK_ACCELZ_POS]= "accelz";
		labels[ACTPACK_GYROX_POS]= "gyrox";
		labels[ACTPACK_GYROY_POS]= "gyroy";
		labels[ACTPACK_GYROZ_POS]= "gyroz";
		labels[ACTPACK_MOT_ANG_POS]= "mot_ang";
		labels[ACTPACK_MOT_VEL_POS]= "mot_vel";
		labels[ACTPACK_MOT_ACC_POS]= "mot_acc";
		labels[ACTPACK_MOT_CUR_POS]= "mot_cur";
		labels[ACTPACK_MOT_VOLT_POS]= "mot_volt";
		labels[ACTPACK_BATT_VOLT_POS]= "batt_volt";
		labels[ACTPACK_BATT_CURR_POS]= "batt_curr";
		labels[ACTPACK_TEMPERATURE_POS]= "temperature";
		labels[ACTPACK_STATUS_MN_POS]= "status_Mn";
		labels[ACTPACK_STATUS_EX_POS]= "status_Ex";
		labels[ACTPACK_STATUS_RE_POS]= "status_Re";
		labels[ACTPACK_GENVAR_0_POS]= "genvar_0";
		labels[ACTPACK_GENVAR_1_POS]= "genvar_1";
		labels[ACTPACK_GENVAR_2_POS]= "genvar_2";
		labels[ACTPACK_GENVAR_3_POS]= "genvar_3";
		labels[ACTPACK_GENVAR_4_POS]= "genvar_4";
		labels[ACTPACK_GENVAR_5_POS]= "genvar_5";
		labels[ACTPACK_GENVAR_6_POS]= "genvar_6";
		labels[ACTPACK_GENVAR_7_POS]= "genvar_7";
		labels[ACTPACK_GENVAR_8_POS]= "genvar_8";
		labels[ACTPACK_GENVAR_9_POS]= "genvar_9";
		labels[ACTPACK_ANK_ANG_POS]= "ank_ang";
		labels[ACTPACK_ANK_VEL_POS]= "ank_vel";
		labels[ACTPACK_SYSTEM_TIME_POS]="sys_time";
	};
}; 
#endif ////ACTPACK_STRUCT_H
